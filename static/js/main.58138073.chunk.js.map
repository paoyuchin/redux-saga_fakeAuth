{"version":3,"sources":["store/action/actions.js","pageComponent/AuthStatus.js","pageComponent/PrivateRoute.js","pageComponent/Login.js","pageComponent/Public.js","pageComponent/Protected.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/rootReducer.js","API/index.js","sagas/login.js","sagas/index.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","LOGIN_CANCEL","LOGOUT_SUCCESS","LOGOUT_REQUEST","AuthStatus","_this","this","props","isAuthenticated","react_default","a","createElement","onClick","logout","history","push","Component","withRouter","connect","state","auth","dispatch","type","PrivateRoute","_this$props","ProtectedComponent","react_router","Object","assign","render","to","pathname","from","location","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","prevState","modal","checkIsValidUser","handleChange","e","defineProperty","target","id","value","handleSubmit","preventDefault","login","username","password","Button","color","Modal","isOpen","className","ModalHeader","Form","onSubmit","FormGroup","Label","for","Input","onChange","name","placeholder","errorMessage","message","ModalFooter","loginCancel","console","log","isLoginFailed","error","isLoginCancel","credential","LoginRequest","Public","Protected","AuthExample","react_router_dom","pageComponent_AuthStatus","path","component","pageComponent_PrivateRoute","pageComponent_Login","Boolean","window","hostname","match","authReducer","arguments","length","undefined","action","status","rootReducer","combineReducers","loginAPI","Promise","resolve","reject","setTimeout","Error","watchRequestLogin","watchRequestLogout","logoutFlow","authorize","loginFlow","regenerator_default","wrap","_context","prev","next","takeEvery","stop","_marked","_context2","_marked2","_context3","put","response","_marked3","_context4","sent","t0","finish","_marked4","task","_context5","fork","take","cancel","_marked5","rootSaga","all","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","thunk","run","ReactDOM","es","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58138073.chunk.js","sourcesContent":["\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGIN_CANCEL = 'LOGIN_CANCEL';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGINFAILED = 'LOGINFAILED';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\n\nexport function LoginRequest(credential) {\n  console.log('LoginRequest in action',  credential)\n  return {\n    type: LOGIN_REQUEST,\n    credential\n  }\n};\n\nexport function LogOut() {\n  return {\n    type: LOGOUT_REQUEST,\n  }\n}\n\nexport function LoginCancel() {\n  console.log(55, 'LoginCancel')\n  return {\n    type: LOGIN_CANCEL\n  }\n}\n\nexport function loginFailed(error) {\n  return {\n    type: LOGINFAILED,\n    error\n  }\n}\n\n\n\nexport function loginRequest({username,password}) {\n  return {\n    type: LOGIN_REQUEST,\n    username,\n    password\n  }\n}\n\nexport function loginSuccess(response) {\n  return {\n    type: LOGIN_SUCCESS,\n    response\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////////\n","\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport {LogOut} from \"../store/action/actions\";\n\n\nclass AuthStatus extends Component {\n\n  render(){\n    return(\n        this.props.isAuthenticated ? (\n          <p>\n            Welcome!\n            <button\n              onClick={() => {\n              this.props.logout();\n              this.props.history.push(\"/\");\n              }}\n            >\n              Sign out\n        </button>\n          </p>\n        ) : (\n            <p>You are not logged in.</p>\n          )\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => {\n      dispatch(LogOut());\n    }\n  };\n};\n\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AuthStatus));\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass PrivateRoute extends Component {\n  render() {\n    const { ProtectedComponent, isAuthenticated } = this.props;\n    return (\n      <Route\n        {...this.props}\n        render={props => {\n          return isAuthenticated ? (\n            <ProtectedComponent {...this.props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location.pathname }\n              }}\n            />\n          );\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PrivateRoute);\n// export default PrivateRoute;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  LoginRequest,\n  LoginCancel\n} from \"../store/action/actions\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  FormFeedback\n} from \"reactstrap\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  };\n  checkIsValidUser = () => {\n    if (this.props.isAuthenticated) {\n      this.toggle();\n      this.props.history.push(\"/protected\");\n    }\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.login(this.state);\n  };\n  render() {\n    let { from } = this.props.location.state || { from: { pathname: \"/\" } };\n    // let { redirectToReferrer } = this.state;\n    // if (redirectToReferrer) return <Redirect to={from} />;\n    if (this.props.isAuthenticated) {\n      this.props.history.push(\"/protected\");\n    }\n    return (\n      <div>\n        <div>\n          <Button color=\"danger\" onClick={this.toggle}>\n            login\n          </Button>\n          <Modal\n            isOpen={this.state.modal}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader>sign in</ModalHeader>\n            <Form onSubmit={this.handleSubmit}>\n              <FormGroup>\n                <Label for=\"exampleEmail\">username</Label>\n                <Input\n                  onChange={this.handleChange}\n                  name=\"email\"\n                  id=\"username\"\n                  placeholder=\"username\"\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"examplePassword\">password</Label>\n                <Input\n                  onChange={this.handleChange}\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"password\"\n                />\n              </FormGroup>\n              {this.props.errorMessage ? <p>{this.props.errorMessage.message}</p> : null} \n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.props.loginCancel}>\n                  cancel\n                </Button>\n                <Button color=\"secondary\" onSubmit={this.handleSubmit}>\n                  sign in\n                </Button>\n              </ModalFooter>\n            </Form>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  console.log('Login state', state)\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoginFailed: state.auth.isLoginFailed,\n    errorMessage: state.auth.error,\n    isLoginCancel: state.auth.isLoginCancel\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: credential => {dispatch(LoginRequest(credential))},\n    loginCancel: () => {dispatch(LoginCancel())}\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","\nimport React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\n\nconst Public = () => {\n  return <h3 > Public </h3>;\n}\n\nexport default Public;\n","\nimport React, { Component } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\n\nconst Protected = () => {\n  return <h3> you are in Protected page</h3>;\n};\n\nexport default Protected;\n","import React, { Component } from \"react\";\nimport AuthStatus from './pageComponent/AuthStatus';\nimport PrivateRoute from \"./pageComponent/PrivateRoute\";\nimport Login from './pageComponent/Login';\nimport Public from './pageComponent/Public';\nimport Protected from './pageComponent/Protected';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\n\nclass AuthExample extends Component {\n\n// const fakeAuth = {\n//   isAuthenticated: false,\n//   authenticate(cb) {\n//     this.isAuthenticated = true;\n//     setTimeout(cb, 100); // fake async\n//   },\n//   signout(cb) {\n//     this.isAuthenticated = false;\n//     setTimeout(cb, 100);\n//   }\n// };\nrender(){\n  return (\n    <Router>\n      <div>\n        <AuthStatus />\n        <ul>\n          <li>\n            <Link to=\"/public\">Public Page</Link>\n          </li>\n          <li>\n            <Link to=\"/protected\">Protected Page</Link>\n          </li>\n        </ul>\n        <Route path=\"/public\" component={Public} />\n        <PrivateRoute\n          path=\"/protected\"\n          ProtectedComponent={Protected}\n          isAuthenticated={this.props.isAuthenticated}\n        />\n        <Route\n          path=\"/login\"\n          render={props => <Login {...props} />}\n        />\n      </div>\n    </Router>\n  );\n}\n\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\n\nexport default connect(mapStateToProps)(AuthExample);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  LOGIN_CANCEL,\n  LOGOUT,\n  LOGIN_FAILED,\n  LOGOUT_SUCCESS,\n} from '../action/actions'\n\nconst authReducer = (state = {\n  isAuthenticated: false,\n  error:null,\n  isLoginCancel: null, \n  isLoginFailed: null\n}, action) => {\n  console.log('authReducer action:',action)\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        status: 'loading'\n      }\n    case LOGIN_SUCCESS:\n      return {\n        isAuthenticated: true,\n      }\n    case LOGOUT:\n      return {\n        isAuthenticated: false,\n      }\n    case LOGIN_ERROR:\n      return {\n        isAuthenticated: false,\n        error: action.error\n      }\n    case 'LOGIN_FAILED':\n      return {\n        isAuthenticated: false,\n        isLoginFailed: true,\n      }\n    case LOGOUT_SUCCESS:\n      return {\n        isAuthenticated: false,\n      }\n    case LOGIN_CANCEL:\n      return {\n        isLoginCancel: true\n      }\n      default:\n        return state\n  }\n}\n// const authReducer = (state = initState, action) => {\n//   switch (action.type) {\n//     case 'LOGIN_SUCCESS':\n//       return Object.assign({}, state, {\n//         isAuthenticated: true,\n//         isLoginFailed: null,        \n//       })\n//       break;\n//     case 'LOGIN_FAILED':\n//       return Object.assign({}, state, {\n//         isAuthenticated: false,\n//         isLoginFailed: true,\n//       })\n//       break; \n//     case 'LOGOUT':\n//       return Object.assign({}, state, {\n//         isAuthenticated: false,\n//       })\n//     break;\n//     default:\n//       return state;\n//   }\n// };\n\nexport default authReducer;\n","import authReducer from './authReducer';\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n});\n\nexport default rootReducer;\n","function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response\n  } else {\n    var error = new Error(response.statusText)\n    error.response = response\n    throw error\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json()\n}\n\nfunction fetchAPI(url, options) {\n  return fetch(url, options)\n    .then(checkStatus)\n    .then(parseJSON)\n}\n\nexport function loginAPI(credential) {\n  console.log('credentai', credential)\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      console.log(credential)\n      if (credential.username === 'f' && credential.password === 'f') {\n        console.log('right password and username')\n            resolve(true);\n        }else{\n          console.log('wrong')\n          reject(new Error('wrong password or username'));\n        }\n      }, 5000)\n    });\n}\n","import {\n    takeEvery\n} from 'redux-saga/effects';\nimport {call, put, fork, take, cancel} from 'redux-saga/effects';\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  LOGIN_CANCEL,\n  LOGOUT,\n  LOGINFAILED,\n  LOGOUT_SUCCESS,\n  LOGOUT_REQUEST\n} from '../store/action/actions';\nimport {loginAPI} from '../API'\n\nexport function* watchRequestLogin() {\n    console.log(1, 'watch request')\n    yield takeEvery(LOGIN_REQUEST, loginFlow);\n};\nexport function* watchRequestLogout(){\n    console.log(886, 'watch logout')\n    yield takeEvery(LOGOUT_REQUEST, logoutFlow);\n};\nexport function* logoutFlow() {\n    console.log(886, 'logoutFlow')\n    yield put({\n        type: LOGOUT_SUCCESS,\n        response: 'logout success'\n    })\n}\n\n\nexport function* authorize(action){\n    console.log(3, 'authorized', action.credential)\n    try {\n        const response = yield call(loginAPI, action.credential)\n        yield put({\n            type: LOGIN_SUCCESS,\n            response: response\n        })\n    } catch (error) {\n        console.log('error', error)\n        yield put({\n            type: LOGIN_ERROR,\n            error\n        })\n    } finally {\n        console.log('cancelled')\n    }\n}\n\nexport function* loginFlow(action) {\n    console.log('login flow', action)\n    const task = yield fork(authorize, action)\n    yield take(LOGIN_CANCEL)\n    yield cancel(task)\n}\n// export function* logout(action) {\n//     console.log(886, 'logout', action)\n//     const task = yield fork(authorize, action)\n//     yield take(LOGIN_CANCEL)\n//     yield cancel(task)\n// }\n\n// export function* logoutFlow(action) {\n//     console.log(886, 'logoutflow',action)\n//     const task = yield fork(logout, action)\n// }\n","import {watchRequestLogin} from './login';\nimport {watchRequestLogout} from './login';\nimport {all} from 'redux-saga/effects';\n\n\n\nexport default function* rootSaga() {\n  console.log('rootsaga')\n  yield all([\n    watchRequestLogin(),\n    watchRequestLogout(), \n  ])\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\n// import { helloSaga } from './sagas'\nimport createSagaMiddleware from 'redux-saga';\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducer/rootReducer';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport thunk from 'redux-thunk';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk, sagaMiddleware)\n);\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}